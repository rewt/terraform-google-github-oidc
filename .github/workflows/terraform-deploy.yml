name: Terraform Deployment
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'tests/basic/**'
  issue_comment:
    types: [created]
    paths:
      - 'tests/basic/**'
  push:
    branches:
      - '*'
    paths:
      - 'tests/basic/**'

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  PROJECT_NO: ${{ secrets.PROJECT_NO }}
  POOL_ID: ${{ secrets.POOL_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ env.PROJECT_NO }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/gh-provider
          service_account: gcp-github-access@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Terraform init
        run: terraform init -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        continue-on-error: true
        run: terraform plan -input=false -out ../plan.out -no-color

      - name: Post comment to Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: terraform\n${{ steps.tf-plan.outputs.stdout }}
        with:
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.tf-init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.tf-validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.tf-validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.tf-plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            #### Terraform Apply üìñ\`${{ steps.tf-apply.outcome }}\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform apply
        if: github.event_name == 'push' || (github.event.pull_request.merged == true && contains(github.event.comment.body, 'run apply'))
        continue-on-error: true
        run: terraform apply -input=false -auto-approve -no-color ../plan.out
