name: Terraform Deployment
on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  PROJECT_NO: ${{ secrets.PROJECT_NO }}
  POOL_ID: ${{ secrets.POOL_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      pull-requests: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NO }}/locations/global/workloadIdentityPools/${{ env.POOL_ID }}/providers/gh-provider
          service_account: gcp-github-access@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
      

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Terraform init
        run: terraform init -no-color

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -input=false -out=tfplan -no-color
        continue-on-error: true

      - name: Check for "run apply" comment
        id: check-comment
        uses: actions/github-script@v6
        with:
          script: |
            const comment = github.context.payload.comment;
            const isPrComment = comment && comment.pull_request;
            const isCommented = comment && comment.body.includes('run apply');
            const isMerged = github.context.payload.pull_request.merged === true;
            console.log(`Is PR Comment: ${isPrComment}, Is Commented: ${isCommented}, Is Merged: ${isMerged}`);
            console.log(`Comment: ${comment.body}`);
            console.log(`Pull Request Number: ${github.context.payload.pull_request.number}`);
            console.log(`Pull Request Title: ${github.context.payload.pull_request.title}`);
            console.log(`Pull Request Base Branch: ${github.context.payload.pull_request.base.ref}`);
            console.log(`Pull Request Head Branch: ${github.context.payload.pull_request.head.ref}`);
            console.log(`Pull Request Merged: ${github.context.payload.pull_request.merged}`);
            console.log(`Pull Request Merge Commit SHA: ${github.context.payload.pull_request.merge_commit_sha}`);
            console.log(`Pull Request Author: ${github.context.payload.pull_request.user.login}`);
            console.log(`Comment Author: ${comment.user.login}`);
            console.log(`Comment Body: ${comment.body}`);
            console.log(`Comment Created At: ${comment.created_at}`);
            console.log(`Comment Updated At: ${comment.updated_at}`);
            console.log(`Comment HTML URL: ${comment.html_url}`);
            console.log(`Repository: ${github.context.payload.repository.full_name}`);
            console.log(`Repository Owner: ${github.context.payload.repository.owner.login}`);
            console.log(`Repository Name: ${github.context.payload.repository.name}`);
            console.log(`Repository URL: ${github.context.payload.repository.html_url}`);
            console.log(`Repository SSH URL: ${github.context.payload.repository.ssh_url}`);
            console.log(`Repository Clone URL: ${
